{
	"cfn_validate": {
		"prefix": [
			"cfn_validate",
			"cfn_validate_template"
		],
		"description": "CFN; Validate Template",
		"body": [
			"# aws cloudformation validate-template --profile mechrockadmin --template-body file://./GuardDutyFindings.yml"
		]
	},
	"cfn_inline_lambda": {
		"prefix": [
			"cfn_inline_lambda",
			"cfn_lambda"
		],
		"description": "CFN; Inline Lambda Function",
		"body": [
			"HelloWorldLambdaFunction:\n    Type: AWS::Lambda::Function\n    Properties:\n      Runtime: python3.7\n      Handler: index.lambda_handler\n      Code:\n        ZipFile: |\n          import json\n          def lambda_handler(event, context):\n              return {\n                  'statusCode': 200,\n                  'body': json.dumps('Hello World!')\n              }"
		]
	},
	"cfn_lambda_custom_resource": {
		"prefix": [
			"cfn_lambda_custom_resource"
		],
		"description": "CFN: Lambda Custom Resource",
		"body": [
			"DescribeOrganizationFunction:\n  Type: AWS::Lambda::Function\n  Properties:\n    Runtime: python3.7\n    Handler: index.lambda_handler\n    Code:\n      ZipFile: |\n        import json\n        import boto3\n        import cfnresponse\n        client = boto3.client('organizations')\n\n        def lambda_handler(event, context):\n          response = client.describe_organization()\n          cfnresponse.send(event, context, cfnresponse.SUCCESS, response['Organization'] if response and response['Organization'] else {})"
		]
	},
	"cfn_execution_role": {
		"prefix": [
			"cfn_execution_role",
			"cfn_role"
		],
		"description": "CFN: IAM role for lambda execution",
		"body": [
			"DescribeOrganizationExecutionRole:\n    Type: AWS::IAM::Role\n    Properties:\n      AssumeRolePolicyDocument:\n        Version: '2012-10-17'\n        Statement:\n        - Effect: Allow\n          Principal:\n            Service:\n            - lambda.amazonaws.com\n          Action:\n          - sts:AssumeRole\n      Path: "/"\n      Policies:\n      - PolicyName: root\n        PolicyDocument:\n          Version: '2012-10-17'\n          Statement:\n          - Effect: Allow\n            Action:\n              - logs:CreateLogGroup\n              - logs:CreateLogStream\n              - logs:PutLogEvents\n            Resource: arn:aws:logs:*:*:*\n          - Effect: Allow\n            Action:\n              - organizations:DescribeOrganization \n            Resource: "*""
		]
	},
	"cfn_template": {
		"prefix": [
			"cfn_template"
		],
		"description": "CFN: Empty template",
		"body": [
			"AWSTemplateFormatVersion: \"2010-09-09\"\nDescription: A sample template\n\nParameters:\n\nResources:\n"
		]
	},
	"cfn_parameter": {
		"prefix": [
			"cfn_parameter"
		],
		"description": "CFN: Parameter",
		"body": [
			"  TestParameter: \n    Type: String\n    Default: t2.micro\n    AllowedValues: \n      - t2.micro\n      - m1.small\n      - m1.large\n    Description: Enter t2.micro, m1.small, or m1.large. Default is t2.micro."
		]
	},
	"cfn_tags": {
		"prefix": [
			"cfn_tags"
		],
		"description": "CFN: Standard tags",
		"body": [
			"Tags:\n        - Key: RepositoryUrl\n          Value: \"my-repository\"\n        - Key: Version\n          Value: \"1.0\"\n        - Key: Creator\n          Value: \"creator-here\"\n        - Key: Owner\n          Value: \"owner-here\"\n        - Key: Stack\n          Value: \"Environment here e.g. Prod etc\"\n        - Key: Project\n          Value: \"my-project-name\""
		]
	},
}